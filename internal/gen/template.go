package gen

var (
	codeGenHint = "// Code generated by 'gorm.io/cli/gorm'. DO NOT EDIT."
	pkgTmpl     = codeGenHint + `

package {{.Package}}

import (
    "gorm.io/gorm"
    "gorm.io/gorm/clause"
    "gorm.io/cli/gorm/field"
    {{- if .UseGenerics }}
    "gorm.io/cli/gorm/generics"
    {{- end }}
    {{range .Imports -}}
    {{.ImportPath}}
    {{end -}}
)

{{range .Interfaces}}
{{$IfaceName := .IfaceName}}
func {{.Name}}[T any](db *gorm.DB, opts ...clause.Expression) {{$IfaceName}}Interface[T] {
    return {{$IfaceName}}Impl[T]{
        Interface: {{if $.UseGenerics}}generics{{else}}gorm{{end}}.G[T](db, opts...),
    }
}

type {{$IfaceName}}Interface[T any] interface {
    {{if $.UseGenerics}}generics{{else}}gorm{{end}}.Interface[T]
    {{range .Methods -}}
    {{.Name}}({{.ParamsString}}) ({{.ResultString}})
    {{end}}
}

type {{$IfaceName}}Impl[T any] struct {
    {{if $.UseGenerics}}generics{{else}}gorm{{end}}.Interface[T]
}

{{range .Methods}}
func (e {{$IfaceName}}Impl[T]) {{.Name}}({{.ParamsString}}) ({{.ResultString}}) {
	{{.Body}}
}
{{end}}
{{end}}

{{range .Structs}}
var {{.Name}} = struct {
	{{range .Fields -}}
	{{.Name}} {{.Type}}
	{{end}}
}{
	{{range .Fields -}}
	{{.Name}}: {{.Value}},
	{{end -}}
}
{{end}}
`
)
