// Code generated by 'gorm.io/cmd/gorm'. DO NOT EDIT.

package nested

import (
	"context"
	"strings"

	"gorm.io/gorm"
	"gorm.io/gorm/clause"
)

func I1[T any](db *gorm.DB, opts ...clause.Expression) _I1Interface[T] {
	return _I1Impl[T]{
		Interface: gorm.G[T](db, opts...),
	}
}

type _I1Interface[T any] interface {
	gorm.Interface[T]
	ByID(ctx context.Context, id int) (T, error)
}

type _I1Impl[T any] struct {
	gorm.Interface[T]
}

func (e _I1Impl[T]) ByID(ctx context.Context, id int) (T, error) {
	var sb strings.Builder
	params := make([]any, 0, 2)

	sb.WriteString("SELECT * FROM ? WHERE id=?")
	params = append(params, clause.Table{Name: clause.CurrentTable}, id)

	var result T
	err := e.Raw(sb.String(), params...).Scan(ctx, &result)
	return result, err
}
